// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flush_command.proto

#ifndef PROTOBUF_flush_5fcommand_2eproto__INCLUDED
#define PROTOBUF_flush_5fcommand_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace db {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_flush_5fcommand_2eproto();
void protobuf_InitDefaults_flush_5fcommand_2eproto();
void protobuf_AssignDesc_flush_5fcommand_2eproto();
void protobuf_ShutdownFile_flush_5fcommand_2eproto();

class flush_command;

// ===================================================================

class flush_command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.db.flush_command) */ {
 public:
  flush_command();
  virtual ~flush_command();

  flush_command(const flush_command& from);

  inline flush_command& operator=(const flush_command& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flush_command& default_instance();

  static const flush_command* internal_default_instance();

  void Swap(flush_command* other);

  // implements Message ----------------------------------------------

  inline flush_command* New() const { return New(NULL); }

  flush_command* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const flush_command& from);
  void MergeFrom(const flush_command& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(flush_command* other);
  void UnsafeMergeFrom(const flush_command& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  bool is_dirty() const { return dirty_; }
  void clear_dirty() { dirty_ = false; }
  // optional uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.db.flush_command)
 private:
  bool dirty_;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_flush_5fcommand_2eproto_impl();
  friend void  protobuf_AddDesc_flush_5fcommand_2eproto_impl();
  friend void protobuf_AssignDesc_flush_5fcommand_2eproto();
  friend void protobuf_ShutdownFile_flush_5fcommand_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<flush_command> flush_command_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// flush_command

// optional uint64 id = 1;
inline void flush_command::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
dirty_ = true;
}
inline ::google::protobuf::uint64 flush_command::id() const {
  // @@protoc_insertion_point(field_get:proto.db.flush_command.id)
  return id_;
}
inline void flush_command::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  dirty_ = true;
  // @@protoc_insertion_point(field_set:proto.db.flush_command.id)
}

// optional uint32 type = 2;
inline void flush_command::clear_type() {
  type_ = 0u;
dirty_ = true;
}
inline ::google::protobuf::uint32 flush_command::type() const {
  // @@protoc_insertion_point(field_get:proto.db.flush_command.type)
  return type_;
}
inline void flush_command::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  dirty_ = true;
  // @@protoc_insertion_point(field_set:proto.db.flush_command.type)
}

inline const flush_command* flush_command::internal_default_instance() {
  return &flush_command_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace db
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_flush_5fcommand_2eproto__INCLUDED
