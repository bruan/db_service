// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: result_set.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "result_set.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace db {

namespace {

const ::google::protobuf::Descriptor* row_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  row_reflection_ = NULL;
const ::google::protobuf::Descriptor* result_set_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  result_set_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_result_5fset_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_result_5fset_2eproto() {
  protobuf_AddDesc_result_5fset_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "result_set.proto");
  GOOGLE_CHECK(file != NULL);
  row_descriptor_ = file->message_type(0);
  static const int row_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(row, value_),
  };
  row_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      row_descriptor_,
      row::default_instance_,
      row_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(row, _has_bits_[0]),
      -1,
      -1,
      sizeof(row),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(row, _internal_metadata_),
      -1);
  result_set_descriptor_ = file->message_type(1);
  static const int result_set_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(result_set, field_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(result_set, rows_),
  };
  result_set_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      result_set_descriptor_,
      result_set::default_instance_,
      result_set_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(result_set, _has_bits_[0]),
      -1,
      -1,
      sizeof(result_set),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(result_set, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_result_5fset_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      row_descriptor_, &row::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      result_set_descriptor_, &result_set::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_result_5fset_2eproto() {
  delete row::default_instance_;
  delete row_reflection_;
  delete result_set::default_instance_;
  delete result_set_reflection_;
}

void protobuf_AddDesc_result_5fset_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_result_5fset_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020result_set.proto\022\010proto.db\"\024\n\003row\022\r\n\005v"
    "alue\030\001 \003(\014\"=\n\nresult_set\022\022\n\nfield_name\030\001"
    " \003(\t\022\033\n\004rows\030\002 \003(\0132\r.proto.db.row", 113);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "result_set.proto", &protobuf_RegisterTypes);
  row::default_instance_ = new row();
  result_set::default_instance_ = new result_set();
  row::default_instance_->InitAsDefaultInstance();
  result_set::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_result_5fset_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_result_5fset_2eproto {
  StaticDescriptorInitializer_result_5fset_2eproto() {
    protobuf_AddDesc_result_5fset_2eproto();
  }
} static_descriptor_initializer_result_5fset_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int row::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

row::row()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.row)
}

void row::InitAsDefaultInstance() {
}

row::row(const row& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.db.row)
}

void row::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

row::~row() {
  // @@protoc_insertion_point(destructor:proto.db.row)
  SharedDtor();
}

void row::SharedDtor() {
  if (this != default_instance_) {
  }
}

void row::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* row::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return row_descriptor_;
}

const row& row::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_result_5fset_2eproto();
  return *default_instance_;
}

row* row::default_instance_ = NULL;

row* row::New(::google::protobuf::Arena* arena) const {
  row* n = new row;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void row::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.row)
  value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool row::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.row)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes value = 1;
      case 1: {
        if (tag == 10) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_value;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.row)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.row)
  return false;
#undef DO_
}

void row::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.row)
  // repeated bytes value = 1;
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->value(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.row)
}

::google::protobuf::uint8* row::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.row)
  // repeated bytes value = 1;
  for (int i = 0; i < this->value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->value(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.row)
  return target;
}

int row::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.row)
  int total_size = 0;

  // repeated bytes value = 1;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->value(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void row::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.row)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const row* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const row>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.row)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.row)
    MergeFrom(*source);
  }
}

void row::MergeFrom(const row& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.row)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  value_.MergeFrom(from.value_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void row::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void row::CopyFrom(const row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool row::IsInitialized() const {

  return true;
}

void row::Swap(row* other) {
  if (other == this) return;
  InternalSwap(other);
}
void row::InternalSwap(row* other) {
  value_.UnsafeArenaSwap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata row::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = row_descriptor_;
  metadata.reflection = row_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// row

// repeated bytes value = 1;
int row::value_size() const {
  return value_.size();
}
void row::clear_value() {
  value_.Clear();
}
 const ::std::string& row::value(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.row.value)
  return value_.Get(index);
}
 ::std::string* row::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.row.value)
  return value_.Mutable(index);
}
 void row::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.db.row.value)
  value_.Mutable(index)->assign(value);
}
 void row::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.db.row.value)
}
 void row::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.db.row.value)
}
 ::std::string* row::add_value() {
  // @@protoc_insertion_point(field_add_mutable:proto.db.row.value)
  return value_.Add();
}
 void row::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.db.row.value)
}
 void row::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.db.row.value)
}
 void row::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.db.row.value)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
row::value() const {
  // @@protoc_insertion_point(field_list:proto.db.row.value)
  return value_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
row::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.row.value)
  return &value_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int result_set::kFieldNameFieldNumber;
const int result_set::kRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

result_set::result_set()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.result_set)
}

void result_set::InitAsDefaultInstance() {
}

result_set::result_set(const result_set& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.db.result_set)
}

void result_set::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

result_set::~result_set() {
  // @@protoc_insertion_point(destructor:proto.db.result_set)
  SharedDtor();
}

void result_set::SharedDtor() {
  if (this != default_instance_) {
  }
}

void result_set::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* result_set::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return result_set_descriptor_;
}

const result_set& result_set::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_result_5fset_2eproto();
  return *default_instance_;
}

result_set* result_set::default_instance_ = NULL;

result_set* result_set::New(::google::protobuf::Arena* arena) const {
  result_set* n = new result_set;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void result_set::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.result_set)
  field_name_.Clear();
  rows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool result_set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.result_set)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string field_name = 1;
      case 1: {
        if (tag == 10) {
         parse_field_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_field_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field_name(this->field_name_size() - 1).data(),
            this->field_name(this->field_name_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.db.result_set.field_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_field_name;
        if (input->ExpectTag(18)) goto parse_rows;
        break;
      }

      // repeated .proto.db.row rows = 2;
      case 2: {
        if (tag == 18) {
         parse_rows:
          DO_(input->IncrementRecursionDepth());
         parse_loop_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_rows;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.result_set)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.result_set)
  return false;
#undef DO_
}

void result_set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.result_set)
  // repeated string field_name = 1;
  for (int i = 0; i < this->field_name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field_name(i).data(), this->field_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.db.result_set.field_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->field_name(i), output);
  }

  // repeated .proto.db.row rows = 2;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rows(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.result_set)
}

::google::protobuf::uint8* result_set::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.result_set)
  // repeated string field_name = 1;
  for (int i = 0; i < this->field_name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field_name(i).data(), this->field_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.db.result_set.field_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->field_name(i), target);
  }

  // repeated .proto.db.row rows = 2;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->rows(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.result_set)
  return target;
}

int result_set::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.result_set)
  int total_size = 0;

  // repeated string field_name = 1;
  total_size += 1 * this->field_name_size();
  for (int i = 0; i < this->field_name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->field_name(i));
  }

  // repeated .proto.db.row rows = 2;
  total_size += 1 * this->rows_size();
  for (int i = 0; i < this->rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void result_set::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.result_set)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const result_set* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const result_set>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.result_set)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.result_set)
    MergeFrom(*source);
  }
}

void result_set::MergeFrom(const result_set& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.result_set)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  field_name_.MergeFrom(from.field_name_);
  rows_.MergeFrom(from.rows_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void result_set::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.result_set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void result_set::CopyFrom(const result_set& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.result_set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool result_set::IsInitialized() const {

  return true;
}

void result_set::Swap(result_set* other) {
  if (other == this) return;
  InternalSwap(other);
}
void result_set::InternalSwap(result_set* other) {
  field_name_.UnsafeArenaSwap(&other->field_name_);
  rows_.UnsafeArenaSwap(&other->rows_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata result_set::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = result_set_descriptor_;
  metadata.reflection = result_set_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// result_set

// repeated string field_name = 1;
int result_set::field_name_size() const {
  return field_name_.size();
}
void result_set::clear_field_name() {
  field_name_.Clear();
}
 const ::std::string& result_set::field_name(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.result_set.field_name)
  return field_name_.Get(index);
}
 ::std::string* result_set::mutable_field_name(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.result_set.field_name)
  return field_name_.Mutable(index);
}
 void result_set::set_field_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.db.result_set.field_name)
  field_name_.Mutable(index)->assign(value);
}
 void result_set::set_field_name(int index, const char* value) {
  field_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.db.result_set.field_name)
}
 void result_set::set_field_name(int index, const char* value, size_t size) {
  field_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.db.result_set.field_name)
}
 ::std::string* result_set::add_field_name() {
  // @@protoc_insertion_point(field_add_mutable:proto.db.result_set.field_name)
  return field_name_.Add();
}
 void result_set::add_field_name(const ::std::string& value) {
  field_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.db.result_set.field_name)
}
 void result_set::add_field_name(const char* value) {
  field_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.db.result_set.field_name)
}
 void result_set::add_field_name(const char* value, size_t size) {
  field_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.db.result_set.field_name)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
result_set::field_name() const {
  // @@protoc_insertion_point(field_list:proto.db.result_set.field_name)
  return field_name_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
result_set::mutable_field_name() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.result_set.field_name)
  return &field_name_;
}

// repeated .proto.db.row rows = 2;
int result_set::rows_size() const {
  return rows_.size();
}
void result_set::clear_rows() {
  rows_.Clear();
}
const ::proto::db::row& result_set::rows(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.result_set.rows)
  return rows_.Get(index);
}
::proto::db::row* result_set::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.result_set.rows)
  return rows_.Mutable(index);
}
::proto::db::row* result_set::add_rows() {
  // @@protoc_insertion_point(field_add:proto.db.result_set.rows)
  return rows_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::db::row >*
result_set::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.result_set.rows)
  return &rows_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::db::row >&
result_set::rows() const {
  // @@protoc_insertion_point(field_list:proto.db.result_set.rows)
  return rows_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace db
}  // namespace proto

// @@protoc_insertion_point(global_scope)
