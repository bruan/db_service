// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: result_set.proto

#ifndef PROTOBUF_result_5fset_2eproto__INCLUDED
#define PROTOBUF_result_5fset_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2007000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace db {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_result_5fset_2eproto();
void protobuf_AssignDesc_result_5fset_2eproto();
void protobuf_ShutdownFile_result_5fset_2eproto();

class result_set;
class row;

// ===================================================================

class row : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.db.row) */ {
 public:
  row();
  virtual ~row();

  row(const row& from);

  inline row& operator=(const row& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const row& default_instance();

  void Swap(row* other);

  // implements Message ----------------------------------------------

  inline row* New() const { return New(NULL); }

  row* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const row& from);
  void MergeFrom(const row& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(row* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes value = 1;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value(int index) const;
  ::std::string* mutable_value(int index);
  void set_value(int index, const ::std::string& value);
  void set_value(int index, const char* value);
  void set_value(int index, const void* value, size_t size);
  ::std::string* add_value();
  void add_value(const ::std::string& value);
  void add_value(const char* value);
  void add_value(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // @@protoc_insertion_point(class_scope:proto.db.row)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  friend void  protobuf_AddDesc_result_5fset_2eproto();
  friend void protobuf_AssignDesc_result_5fset_2eproto();
  friend void protobuf_ShutdownFile_result_5fset_2eproto();

  void InitAsDefaultInstance();
  static row* default_instance_;
};
// -------------------------------------------------------------------

class result_set : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.db.result_set) */ {
 public:
  result_set();
  virtual ~result_set();

  result_set(const result_set& from);

  inline result_set& operator=(const result_set& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const result_set& default_instance();

  void Swap(result_set* other);

  // implements Message ----------------------------------------------

  inline result_set* New() const { return New(NULL); }

  result_set* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const result_set& from);
  void MergeFrom(const result_set& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(result_set* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string field_name = 1;
  int field_name_size() const;
  void clear_field_name();
  static const int kFieldNameFieldNumber = 1;
  const ::std::string& field_name(int index) const;
  ::std::string* mutable_field_name(int index);
  void set_field_name(int index, const ::std::string& value);
  void set_field_name(int index, const char* value);
  void set_field_name(int index, const char* value, size_t size);
  ::std::string* add_field_name();
  void add_field_name(const ::std::string& value);
  void add_field_name(const char* value);
  void add_field_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& field_name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_field_name();

  // repeated .proto.db.row rows = 2;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 2;
  const ::proto::db::row& rows(int index) const;
  ::proto::db::row* mutable_rows(int index);
  ::proto::db::row* add_rows();
  ::google::protobuf::RepeatedPtrField< ::proto::db::row >*
      mutable_rows();
  const ::google::protobuf::RepeatedPtrField< ::proto::db::row >&
      rows() const;

  // @@protoc_insertion_point(class_scope:proto.db.result_set)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> field_name_;
  ::google::protobuf::RepeatedPtrField< ::proto::db::row > rows_;
  friend void  protobuf_AddDesc_result_5fset_2eproto();
  friend void protobuf_AssignDesc_result_5fset_2eproto();
  friend void protobuf_ShutdownFile_result_5fset_2eproto();

  void InitAsDefaultInstance();
  static result_set* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// row

// repeated bytes value = 1;
inline int row::value_size() const {
  return value_.size();
}
inline void row::clear_value() {
  value_.Clear();
}
inline const ::std::string& row::value(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.row.value)
  return value_.Get(index);
}
inline ::std::string* row::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.row.value)
  return value_.Mutable(index);
}
inline void row::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.db.row.value)
  value_.Mutable(index)->assign(value);
}
inline void row::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.db.row.value)
}
inline void row::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.db.row.value)
}
inline ::std::string* row::add_value() {
  // @@protoc_insertion_point(field_add_mutable:proto.db.row.value)
  return value_.Add();
}
inline void row::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.db.row.value)
}
inline void row::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.db.row.value)
}
inline void row::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.db.row.value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
row::value() const {
  // @@protoc_insertion_point(field_list:proto.db.row.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
row::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.row.value)
  return &value_;
}

// -------------------------------------------------------------------

// result_set

// repeated string field_name = 1;
inline int result_set::field_name_size() const {
  return field_name_.size();
}
inline void result_set::clear_field_name() {
  field_name_.Clear();
}
inline const ::std::string& result_set::field_name(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.result_set.field_name)
  return field_name_.Get(index);
}
inline ::std::string* result_set::mutable_field_name(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.result_set.field_name)
  return field_name_.Mutable(index);
}
inline void result_set::set_field_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.db.result_set.field_name)
  field_name_.Mutable(index)->assign(value);
}
inline void result_set::set_field_name(int index, const char* value) {
  field_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.db.result_set.field_name)
}
inline void result_set::set_field_name(int index, const char* value, size_t size) {
  field_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.db.result_set.field_name)
}
inline ::std::string* result_set::add_field_name() {
  // @@protoc_insertion_point(field_add_mutable:proto.db.result_set.field_name)
  return field_name_.Add();
}
inline void result_set::add_field_name(const ::std::string& value) {
  field_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.db.result_set.field_name)
}
inline void result_set::add_field_name(const char* value) {
  field_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.db.result_set.field_name)
}
inline void result_set::add_field_name(const char* value, size_t size) {
  field_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.db.result_set.field_name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
result_set::field_name() const {
  // @@protoc_insertion_point(field_list:proto.db.result_set.field_name)
  return field_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
result_set::mutable_field_name() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.result_set.field_name)
  return &field_name_;
}

// repeated .proto.db.row rows = 2;
inline int result_set::rows_size() const {
  return rows_.size();
}
inline void result_set::clear_rows() {
  rows_.Clear();
}
inline const ::proto::db::row& result_set::rows(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.result_set.rows)
  return rows_.Get(index);
}
inline ::proto::db::row* result_set::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.result_set.rows)
  return rows_.Mutable(index);
}
inline ::proto::db::row* result_set::add_rows() {
  // @@protoc_insertion_point(field_add:proto.db.result_set.rows)
  return rows_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::db::row >*
result_set::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.result_set.rows)
  return &rows_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::db::row >&
result_set::rows() const {
  // @@protoc_insertion_point(field_list:proto.db.result_set.rows)
  return rows_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace db
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_result_5fset_2eproto__INCLUDED
