// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player_extend1.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "player_extend1.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace db {

namespace {

const ::google::protobuf::Descriptor* player_extend1_data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  player_extend1_data_reflection_ = NULL;
const ::google::protobuf::Descriptor* player_extend1_data_set_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  player_extend1_data_set_reflection_ = NULL;
const ::google::protobuf::Descriptor* player_extend1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  player_extend1_reflection_ = NULL;
const ::google::protobuf::Descriptor* player_extend1_set_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  player_extend1_set_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_player_5fextend1_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_player_5fextend1_2eproto() {
  protobuf_AddDesc_player_5fextend1_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "player_extend1.proto");
  GOOGLE_CHECK(file != NULL);
  player_extend1_data_descriptor_ = file->message_type(0);
  static const int player_extend1_data_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_extend1_data, data1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_extend1_data, data2_),
  };
  player_extend1_data_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      player_extend1_data_descriptor_,
      player_extend1_data::internal_default_instance(),
      player_extend1_data_offsets_,
      -1,
      -1,
      -1,
      sizeof(player_extend1_data),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_extend1_data, _internal_metadata_));
  player_extend1_data_set_descriptor_ = file->message_type(1);
  static const int player_extend1_data_set_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_extend1_data_set, data_),
  };
  player_extend1_data_set_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      player_extend1_data_set_descriptor_,
      player_extend1_data_set::internal_default_instance(),
      player_extend1_data_set_offsets_,
      -1,
      -1,
      -1,
      sizeof(player_extend1_data_set),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_extend1_data_set, _internal_metadata_));
  player_extend1_descriptor_ = file->message_type(2);
  static const int player_extend1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_extend1, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_extend1, data_set_),
  };
  player_extend1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      player_extend1_descriptor_,
      player_extend1::internal_default_instance(),
      player_extend1_offsets_,
      -1,
      -1,
      -1,
      sizeof(player_extend1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_extend1, _internal_metadata_));
  player_extend1_set_descriptor_ = file->message_type(3);
  static const int player_extend1_set_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_extend1_set, data_set_),
  };
  player_extend1_set_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      player_extend1_set_descriptor_,
      player_extend1_set::internal_default_instance(),
      player_extend1_set_offsets_,
      -1,
      -1,
      -1,
      sizeof(player_extend1_set),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_extend1_set, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_player_5fextend1_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      player_extend1_data_descriptor_, player_extend1_data::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      player_extend1_data_set_descriptor_, player_extend1_data_set::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      player_extend1_descriptor_, player_extend1::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      player_extend1_set_descriptor_, player_extend1_set::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_player_5fextend1_2eproto() {
  player_extend1_data_default_instance_.Shutdown();
  delete player_extend1_data_reflection_;
  player_extend1_data_set_default_instance_.Shutdown();
  delete player_extend1_data_set_reflection_;
  player_extend1_default_instance_.Shutdown();
  delete player_extend1_reflection_;
  player_extend1_set_default_instance_.Shutdown();
  delete player_extend1_set_reflection_;
}

void protobuf_InitDefaults_player_5fextend1_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::protobuf_InitDefaults_db_5foption_2eproto();
  player_extend1_data_default_instance_.DefaultConstruct();
  player_extend1_data_set_default_instance_.DefaultConstruct();
  player_extend1_default_instance_.DefaultConstruct();
  player_extend1_set_default_instance_.DefaultConstruct();
  player_extend1_data_default_instance_.get_mutable()->InitAsDefaultInstance();
  player_extend1_data_set_default_instance_.get_mutable()->InitAsDefaultInstance();
  player_extend1_default_instance_.get_mutable()->InitAsDefaultInstance();
  player_extend1_set_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_player_5fextend1_2eproto_once_);
void protobuf_InitDefaults_player_5fextend1_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_player_5fextend1_2eproto_once_,
                 &protobuf_InitDefaults_player_5fextend1_2eproto_impl);
}
void protobuf_AddDesc_player_5fextend1_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_player_5fextend1_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024player_extend1.proto\022\010proto.db\032\031google"
    "/protobuf/any.proto\032\017db_option.proto\"3\n\023"
    "player_extend1_data\022\r\n\005data1\030\001 \001(\r\022\r\n\005da"
    "ta2\030\002 \001(\r\"F\n\027player_extend1_data_set\022+\n\004"
    "data\030\001 \003(\0132\035.proto.db.player_extend1_dat"
    "a\"R\n\016player_extend1\022\n\n\002id\030\001 \001(\r\022,\n\010data_"
    "set\030\002 \001(\0132\024.google.protobuf.AnyB\004\210\265\030\001:\006\202"
    "\265\030\002id\"@\n\022player_extend1_set\022*\n\010data_set\030"
    "\001 \003(\0132\030.proto.db.player_extend1b\006proto3", 359);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "player_extend1.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::protobuf_AddDesc_db_5foption_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_player_5fextend1_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_player_5fextend1_2eproto_once_);
void protobuf_AddDesc_player_5fextend1_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_player_5fextend1_2eproto_once_,
                 &protobuf_AddDesc_player_5fextend1_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_player_5fextend1_2eproto {
  StaticDescriptorInitializer_player_5fextend1_2eproto() {
    protobuf_AddDesc_player_5fextend1_2eproto();
  }
} static_descriptor_initializer_player_5fextend1_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_extend1_data::kData1FieldNumber;
const int player_extend1_data::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_extend1_data::player_extend1_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_player_5fextend1_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_extend1_data)
}

void player_extend1_data::InitAsDefaultInstance() {
}

player_extend1_data::player_extend1_data(const player_extend1_data& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.db.player_extend1_data)
}

void player_extend1_data::SharedCtor() {
  dirty_ = false;
  ::memset(&data1_, 0, reinterpret_cast<char*>(&data2_) -
    reinterpret_cast<char*>(&data1_) + sizeof(data2_));
  _cached_size_ = 0;
}

player_extend1_data::~player_extend1_data() {
  // @@protoc_insertion_point(destructor:proto.db.player_extend1_data)
  SharedDtor();
}

void player_extend1_data::SharedDtor() {
}

void player_extend1_data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_extend1_data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return player_extend1_data_descriptor_;
}

const player_extend1_data& player_extend1_data::default_instance() {
  protobuf_InitDefaults_player_5fextend1_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<player_extend1_data> player_extend1_data_default_instance_;

player_extend1_data* player_extend1_data::New(::google::protobuf::Arena* arena) const {
  player_extend1_data* n = new player_extend1_data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_extend1_data::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_extend1_data)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(player_extend1_data, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<player_extend1_data*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(data1_, data2_);

#undef ZR_HELPER_
#undef ZR_

}

bool player_extend1_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_extend1_data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 data1 = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data1_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_data2;
        break;
      }

      // optional uint32 data2 = 2;
      case 2: {
        if (tag == 16) {
         parse_data2:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_extend1_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_extend1_data)
  return false;
#undef DO_
}

void player_extend1_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_extend1_data)
  // optional uint32 data1 = 1;
  if (this->data1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data1(), output);
  }

  // optional uint32 data2 = 2;
  if (this->data2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->data2(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.db.player_extend1_data)
}

::google::protobuf::uint8* player_extend1_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_extend1_data)
  // optional uint32 data1 = 1;
  if (this->data1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data1(), target);
  }

  // optional uint32 data2 = 2;
  if (this->data2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->data2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_extend1_data)
  return target;
}

size_t player_extend1_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_extend1_data)
  size_t total_size = 0;

  // optional uint32 data1 = 1;
  if (this->data1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data1());
  }

  // optional uint32 data2 = 2;
  if (this->data2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_extend1_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_extend1_data)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const player_extend1_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_extend1_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_extend1_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_extend1_data)
    UnsafeMergeFrom(*source);
  }
}

void player_extend1_data::MergeFrom(const player_extend1_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_extend1_data)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void player_extend1_data::UnsafeMergeFrom(const player_extend1_data& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.data1() != 0) {
    set_data1(from.data1());
  }
  if (from.data2() != 0) {
    set_data2(from.data2());
  }
}

void player_extend1_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_extend1_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_extend1_data::CopyFrom(const player_extend1_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_extend1_data)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool player_extend1_data::IsInitialized() const {

  return true;
}

void player_extend1_data::Swap(player_extend1_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_extend1_data::InternalSwap(player_extend1_data* other) {
  std::swap(data1_, other->data1_);
  std::swap(data2_, other->data2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_extend1_data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = player_extend1_data_descriptor_;
  metadata.reflection = player_extend1_data_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_extend1_data

// optional uint32 data1 = 1;
void player_extend1_data::clear_data1() {
  data1_ = 0u;
dirty_ = true;
}
::google::protobuf::uint32 player_extend1_data::data1() const {
  // @@protoc_insertion_point(field_get:proto.db.player_extend1_data.data1)
  return data1_;
}
void player_extend1_data::set_data1(::google::protobuf::uint32 value) {
  
  data1_ = value;
  dirty_ = true;
  // @@protoc_insertion_point(field_set:proto.db.player_extend1_data.data1)
}

// optional uint32 data2 = 2;
void player_extend1_data::clear_data2() {
  data2_ = 0u;
dirty_ = true;
}
::google::protobuf::uint32 player_extend1_data::data2() const {
  // @@protoc_insertion_point(field_get:proto.db.player_extend1_data.data2)
  return data2_;
}
void player_extend1_data::set_data2(::google::protobuf::uint32 value) {
  
  data2_ = value;
  dirty_ = true;
  // @@protoc_insertion_point(field_set:proto.db.player_extend1_data.data2)
}

inline const player_extend1_data* player_extend1_data::internal_default_instance() {
  return &player_extend1_data_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_extend1_data_set::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_extend1_data_set::player_extend1_data_set()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_player_5fextend1_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_extend1_data_set)
}

void player_extend1_data_set::InitAsDefaultInstance() {
}

player_extend1_data_set::player_extend1_data_set(const player_extend1_data_set& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.db.player_extend1_data_set)
}

void player_extend1_data_set::SharedCtor() {
  dirty_ = false;
  _cached_size_ = 0;
}

player_extend1_data_set::~player_extend1_data_set() {
  // @@protoc_insertion_point(destructor:proto.db.player_extend1_data_set)
  SharedDtor();
}

void player_extend1_data_set::SharedDtor() {
}

void player_extend1_data_set::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_extend1_data_set::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return player_extend1_data_set_descriptor_;
}

const player_extend1_data_set& player_extend1_data_set::default_instance() {
  protobuf_InitDefaults_player_5fextend1_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<player_extend1_data_set> player_extend1_data_set_default_instance_;

player_extend1_data_set* player_extend1_data_set::New(::google::protobuf::Arena* arena) const {
  player_extend1_data_set* n = new player_extend1_data_set;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_extend1_data_set::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_extend1_data_set)
  data_.Clear();
}

bool player_extend1_data_set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_extend1_data_set)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.db.player_extend1_data data = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_extend1_data_set)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_extend1_data_set)
  return false;
#undef DO_
}

void player_extend1_data_set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_extend1_data_set)
  // repeated .proto.db.player_extend1_data data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.db.player_extend1_data_set)
}

::google::protobuf::uint8* player_extend1_data_set::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_extend1_data_set)
  // repeated .proto.db.player_extend1_data data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_extend1_data_set)
  return target;
}

size_t player_extend1_data_set::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_extend1_data_set)
  size_t total_size = 0;

  // repeated .proto.db.player_extend1_data data = 1;
  {
    unsigned int count = this->data_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_extend1_data_set::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_extend1_data_set)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const player_extend1_data_set* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_extend1_data_set>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_extend1_data_set)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_extend1_data_set)
    UnsafeMergeFrom(*source);
  }
}

void player_extend1_data_set::MergeFrom(const player_extend1_data_set& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_extend1_data_set)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void player_extend1_data_set::UnsafeMergeFrom(const player_extend1_data_set& from) {
  GOOGLE_DCHECK(&from != this);
  data_.MergeFrom(from.data_);
}

void player_extend1_data_set::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_extend1_data_set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_extend1_data_set::CopyFrom(const player_extend1_data_set& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_extend1_data_set)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool player_extend1_data_set::IsInitialized() const {

  return true;
}

void player_extend1_data_set::Swap(player_extend1_data_set* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_extend1_data_set::InternalSwap(player_extend1_data_set* other) {
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_extend1_data_set::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = player_extend1_data_set_descriptor_;
  metadata.reflection = player_extend1_data_set_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_extend1_data_set

// repeated .proto.db.player_extend1_data data = 1;
int player_extend1_data_set::data_size() const {
  return data_.size();
}
void player_extend1_data_set::clear_data() {
  data_.Clear();
dirty_ = true;
}
const ::proto::db::player_extend1_data& player_extend1_data_set::data(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.player_extend1_data_set.data)
  return data_.Get(index);
}
::proto::db::player_extend1_data* player_extend1_data_set::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.player_extend1_data_set.data)
  return data_.Mutable(index);
}
::proto::db::player_extend1_data* player_extend1_data_set::add_data() {
  // @@protoc_insertion_point(field_add:proto.db.player_extend1_data_set.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::db::player_extend1_data >*
player_extend1_data_set::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.player_extend1_data_set.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::db::player_extend1_data >&
player_extend1_data_set::data() const {
  // @@protoc_insertion_point(field_list:proto.db.player_extend1_data_set.data)
  return data_;
}

inline const player_extend1_data_set* player_extend1_data_set::internal_default_instance() {
  return &player_extend1_data_set_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_extend1::kIdFieldNumber;
const int player_extend1::kDataSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_extend1::player_extend1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_player_5fextend1_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_extend1)
}

void player_extend1::InitAsDefaultInstance() {
  data_set_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

player_extend1::player_extend1(const player_extend1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.db.player_extend1)
}

void player_extend1::SharedCtor() {
  dirty_ = false;
  data_set_ = NULL;
  id_ = 0u;
  _cached_size_ = 0;
}

player_extend1::~player_extend1() {
  // @@protoc_insertion_point(destructor:proto.db.player_extend1)
  SharedDtor();
}

void player_extend1::SharedDtor() {
  if (this != &player_extend1_default_instance_.get()) {
    delete data_set_;
  }
}

void player_extend1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_extend1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return player_extend1_descriptor_;
}

const player_extend1& player_extend1::default_instance() {
  protobuf_InitDefaults_player_5fextend1_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<player_extend1> player_extend1_default_instance_;

player_extend1* player_extend1::New(::google::protobuf::Arena* arena) const {
  player_extend1* n = new player_extend1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_extend1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_extend1)
  id_ = 0u;
  if (GetArenaNoVirtual() == NULL && data_set_ != NULL) delete data_set_;
  data_set_ = NULL;
}

bool player_extend1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_extend1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data_set;
        break;
      }

      // optional .google.protobuf.Any data_set = 2;
      case 2: {
        if (tag == 18) {
         parse_data_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data_set()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_extend1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_extend1)
  return false;
#undef DO_
}

void player_extend1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_extend1)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional .google.protobuf.Any data_set = 2;
  if (this->has_data_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_set_, output);
  }

  // @@protoc_insertion_point(serialize_end:proto.db.player_extend1)
}

::google::protobuf::uint8* player_extend1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_extend1)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional .google.protobuf.Any data_set = 2;
  if (this->has_data_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->data_set_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_extend1)
  return target;
}

size_t player_extend1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_extend1)
  size_t total_size = 0;

  // optional uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // optional .google.protobuf.Any data_set = 2;
  if (this->has_data_set()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_set_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_extend1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_extend1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const player_extend1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_extend1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_extend1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_extend1)
    UnsafeMergeFrom(*source);
  }
}

void player_extend1::MergeFrom(const player_extend1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_extend1)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void player_extend1::UnsafeMergeFrom(const player_extend1& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.has_data_set()) {
    mutable_data_set()->::google::protobuf::Any::MergeFrom(from.data_set());
  }
}

void player_extend1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_extend1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_extend1::CopyFrom(const player_extend1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_extend1)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool player_extend1::IsInitialized() const {

  return true;
}

void player_extend1::Swap(player_extend1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_extend1::InternalSwap(player_extend1* other) {
  std::swap(id_, other->id_);
  std::swap(data_set_, other->data_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_extend1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = player_extend1_descriptor_;
  metadata.reflection = player_extend1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_extend1

// optional uint32 id = 1;
void player_extend1::clear_id() {
  id_ = 0u;
dirty_ = true;
}
::google::protobuf::uint32 player_extend1::id() const {
  // @@protoc_insertion_point(field_get:proto.db.player_extend1.id)
  return id_;
}
void player_extend1::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  dirty_ = true;
  // @@protoc_insertion_point(field_set:proto.db.player_extend1.id)
}

// optional .google.protobuf.Any data_set = 2;
bool player_extend1::has_data_set() const {
  return this != internal_default_instance() && data_set_ != NULL;
}
void player_extend1::clear_data_set() {
  if (GetArenaNoVirtual() == NULL && data_set_ != NULL) delete data_set_;
  data_set_ = NULL;
dirty_ = true;
}
const ::google::protobuf::Any& player_extend1::data_set() const {
  // @@protoc_insertion_point(field_get:proto.db.player_extend1.data_set)
  return data_set_ != NULL ? *data_set_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* player_extend1::mutable_data_set() {
  
  if (data_set_ == NULL) {
    data_set_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:proto.db.player_extend1.data_set)
  return data_set_;
}
::google::protobuf::Any* player_extend1::release_data_set() {
  // @@protoc_insertion_point(field_release:proto.db.player_extend1.data_set)
  
  ::google::protobuf::Any* temp = data_set_;
  data_set_ = NULL;
  return temp;
}
void player_extend1::set_allocated_data_set(::google::protobuf::Any* data_set) {
  delete data_set_;
  data_set_ = data_set;
  if (data_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.db.player_extend1.data_set)
}

inline const player_extend1* player_extend1::internal_default_instance() {
  return &player_extend1_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_extend1_set::kDataSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_extend1_set::player_extend1_set()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_player_5fextend1_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_extend1_set)
}

void player_extend1_set::InitAsDefaultInstance() {
}

player_extend1_set::player_extend1_set(const player_extend1_set& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.db.player_extend1_set)
}

void player_extend1_set::SharedCtor() {
  dirty_ = false;
  _cached_size_ = 0;
}

player_extend1_set::~player_extend1_set() {
  // @@protoc_insertion_point(destructor:proto.db.player_extend1_set)
  SharedDtor();
}

void player_extend1_set::SharedDtor() {
}

void player_extend1_set::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_extend1_set::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return player_extend1_set_descriptor_;
}

const player_extend1_set& player_extend1_set::default_instance() {
  protobuf_InitDefaults_player_5fextend1_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<player_extend1_set> player_extend1_set_default_instance_;

player_extend1_set* player_extend1_set::New(::google::protobuf::Arena* arena) const {
  player_extend1_set* n = new player_extend1_set;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_extend1_set::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_extend1_set)
  data_set_.Clear();
}

bool player_extend1_set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_extend1_set)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.db.player_extend1 data_set = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_data_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data_set()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_data_set;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_extend1_set)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_extend1_set)
  return false;
#undef DO_
}

void player_extend1_set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_extend1_set)
  // repeated .proto.db.player_extend1 data_set = 1;
  for (unsigned int i = 0, n = this->data_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data_set(i), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.db.player_extend1_set)
}

::google::protobuf::uint8* player_extend1_set::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_extend1_set)
  // repeated .proto.db.player_extend1 data_set = 1;
  for (unsigned int i = 0, n = this->data_set_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->data_set(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_extend1_set)
  return target;
}

size_t player_extend1_set::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_extend1_set)
  size_t total_size = 0;

  // repeated .proto.db.player_extend1 data_set = 1;
  {
    unsigned int count = this->data_set_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data_set(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_extend1_set::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_extend1_set)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const player_extend1_set* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_extend1_set>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_extend1_set)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_extend1_set)
    UnsafeMergeFrom(*source);
  }
}

void player_extend1_set::MergeFrom(const player_extend1_set& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_extend1_set)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void player_extend1_set::UnsafeMergeFrom(const player_extend1_set& from) {
  GOOGLE_DCHECK(&from != this);
  data_set_.MergeFrom(from.data_set_);
}

void player_extend1_set::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_extend1_set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_extend1_set::CopyFrom(const player_extend1_set& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_extend1_set)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool player_extend1_set::IsInitialized() const {

  return true;
}

void player_extend1_set::Swap(player_extend1_set* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_extend1_set::InternalSwap(player_extend1_set* other) {
  data_set_.UnsafeArenaSwap(&other->data_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_extend1_set::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = player_extend1_set_descriptor_;
  metadata.reflection = player_extend1_set_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_extend1_set

// repeated .proto.db.player_extend1 data_set = 1;
int player_extend1_set::data_set_size() const {
  return data_set_.size();
}
void player_extend1_set::clear_data_set() {
  data_set_.Clear();
dirty_ = true;
}
const ::proto::db::player_extend1& player_extend1_set::data_set(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.player_extend1_set.data_set)
  return data_set_.Get(index);
}
::proto::db::player_extend1* player_extend1_set::mutable_data_set(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.player_extend1_set.data_set)
  return data_set_.Mutable(index);
}
::proto::db::player_extend1* player_extend1_set::add_data_set() {
  // @@protoc_insertion_point(field_add:proto.db.player_extend1_set.data_set)
  return data_set_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::db::player_extend1 >*
player_extend1_set::mutable_data_set() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.player_extend1_set.data_set)
  return &data_set_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::db::player_extend1 >&
player_extend1_set::data_set() const {
  // @@protoc_insertion_point(field_list:proto.db.player_extend1_set.data_set)
  return data_set_;
}

inline const player_extend1_set* player_extend1_set::internal_default_instance() {
  return &player_extend1_set_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace db
}  // namespace proto

// @@protoc_insertion_point(global_scope)
